syntax = "proto3";

package kanbanpb;
option go_package = "bitbucket.org/latonaio/aion-core/proto/kanbanpb";
import "google/protobuf/struct.proto";
import "google/protobuf/any.proto";

service Kanban {
    // 最新のCカンバンを取得する
    rpc ReceiveKanban(InitializeService) returns (stream StatusKanban);
    rpc SendKanban(Request) returns (Response);
}

service SendAnything {
    rpc ServiceBrokerConn(stream SendKanban) returns (stream SendKanban);
    rpc SendToOtherDevices(stream SendContext) returns (UploadStatus);
}

// Cカンバンデータ
message StatusKanban {
    string startAt = 1;
    string finishAt = 2;
    string nextDeviceName = 3;
    string connectionKey = 4;
    int32 processNumber = 5;
    bool priorSuccess = 6;
    string dataPath = 7;
    repeated string fileList = 8;
    google.protobuf.Struct metadata = 9;
}

// --------------------- Send Anything Server --------------------------

message SendKanban {
    string deviceName = 1;
    string deviceAddr = 2;
    string nextService = 3;
    int32 nextNumber = 4;
    StatusKanban afterKanban = 5;
}

message FileInfo {
    int64 size = 1;
    int32 chunkCnt = 2;
    bytes hash = 3;
    string name = 4;
    string relDir = 5;
}

message Chunk {
    bytes context = 1;
    string name = 2;
    int32 refNum = 3;
}

message StreamInfo {
    int32 fileCount = 1;
}

enum UploadRequestCode {
    SendingKanban = 0;
    SendingFile_CONT = 1;
    SendingFile_EOF = 2;
    SendingFile_FAILED = 3;
    EOS = 4;

    SendingFile_Info = 5;
}

message SendContext {
    UploadRequestCode code = 1;
    google.protobuf.Any context = 2;
}

enum UploadStatusCode {
    Unknown = 0;
    Failed = 1;
    OK = 2;
}

message UploadStatus {
    string Message = 1;
    UploadStatusCode statusCode = 2;
}

// --------------------- Status Kanban Server ---------------------------
// サービス起動時通知
message InitializeService {
    InitializeType initType = 1;
    string microserviceName = 2;
    int32 processNumber = 3;
}

enum InitializeType {
    START_SERVICE = 0;
    START_SERVICE_WITHOUT_KANBAN = 1;
}

enum ResponseStatus {
    SUCCESS = 0;
    FAILED = 1;
}

message Request {
    string microserviceName = 1;
    StatusKanban message = 2;
}

message Response {
    ResponseStatus status = 1;
    string error = 2;
}
