// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/kanbanpb/status.proto

package kanbanpb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	any "github.com/golang/protobuf/ptypes/any"
	_struct "github.com/golang/protobuf/ptypes/struct"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type UploadRequestCode int32

const (
	UploadRequestCode_SendingKanban    UploadRequestCode = 0
	UploadRequestCode_SendingFile_CONT UploadRequestCode = 1
	UploadRequestCode_SendingFile_EOF  UploadRequestCode = 2
	UploadRequestCode_EOS              UploadRequestCode = 3
)

var UploadRequestCode_name = map[int32]string{
	0: "SendingKanban",
	1: "SendingFile_CONT",
	2: "SendingFile_EOF",
	3: "EOS",
}

var UploadRequestCode_value = map[string]int32{
	"SendingKanban":    0,
	"SendingFile_CONT": 1,
	"SendingFile_EOF":  2,
	"EOS":              3,
}

func (x UploadRequestCode) String() string {
	return proto.EnumName(UploadRequestCode_name, int32(x))
}

func (UploadRequestCode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_19b14d75b3499268, []int{0}
}

type UploadStatusCode int32

const (
	UploadStatusCode_Unknown UploadStatusCode = 0
	UploadStatusCode_Failed  UploadStatusCode = 1
	UploadStatusCode_OK      UploadStatusCode = 2
)

var UploadStatusCode_name = map[int32]string{
	0: "Unknown",
	1: "Failed",
	2: "OK",
}

var UploadStatusCode_value = map[string]int32{
	"Unknown": 0,
	"Failed":  1,
	"OK":      2,
}

func (x UploadStatusCode) String() string {
	return proto.EnumName(UploadStatusCode_name, int32(x))
}

func (UploadStatusCode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_19b14d75b3499268, []int{1}
}

type RequestType int32

const (
	RequestType_START_SERVICE                RequestType = 0
	RequestType_START_SERVICE_WITHOUT_KANBAN RequestType = 1
	RequestType_OUTPUT_AFTER_KANBAN          RequestType = 2
)

var RequestType_name = map[int32]string{
	0: "START_SERVICE",
	1: "START_SERVICE_WITHOUT_KANBAN",
	2: "OUTPUT_AFTER_KANBAN",
}

var RequestType_value = map[string]int32{
	"START_SERVICE":                0,
	"START_SERVICE_WITHOUT_KANBAN": 1,
	"OUTPUT_AFTER_KANBAN":          2,
}

func (x RequestType) String() string {
	return proto.EnumName(RequestType_name, int32(x))
}

func (RequestType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_19b14d75b3499268, []int{2}
}

type ResponseType int32

const (
	ResponseType_RES_CACHE_KANBAN   ResponseType = 0
	ResponseType_RES_REQUEST_RESULT ResponseType = 1
)

var ResponseType_name = map[int32]string{
	0: "RES_CACHE_KANBAN",
	1: "RES_REQUEST_RESULT",
}

var ResponseType_value = map[string]int32{
	"RES_CACHE_KANBAN":   0,
	"RES_REQUEST_RESULT": 1,
}

func (x ResponseType) String() string {
	return proto.EnumName(ResponseType_name, int32(x))
}

func (ResponseType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_19b14d75b3499268, []int{3}
}

// Cカンバンデータ
type StatusKanban struct {
	StartAt              string          `protobuf:"bytes,1,opt,name=startAt,proto3" json:"startAt,omitempty"`
	FinishAt             string          `protobuf:"bytes,2,opt,name=finishAt,proto3" json:"finishAt,omitempty"`
	Services             []*ServiceData  `protobuf:"bytes,3,rep,name=services,proto3" json:"services,omitempty"`
	ConnectionKey        string          `protobuf:"bytes,4,opt,name=connectionKey,proto3" json:"connectionKey,omitempty"`
	ProcessNumber        int32           `protobuf:"varint,5,opt,name=processNumber,proto3" json:"processNumber,omitempty"`
	PriorSuccess         bool            `protobuf:"varint,6,opt,name=priorSuccess,proto3" json:"priorSuccess,omitempty"`
	DataPath             string          `protobuf:"bytes,7,opt,name=dataPath,proto3" json:"dataPath,omitempty"`
	FileList             []string        `protobuf:"bytes,8,rep,name=fileList,proto3" json:"fileList,omitempty"`
	Metadata             *_struct.Struct `protobuf:"bytes,9,opt,name=metadata,proto3" json:"metadata,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *StatusKanban) Reset()         { *m = StatusKanban{} }
func (m *StatusKanban) String() string { return proto.CompactTextString(m) }
func (*StatusKanban) ProtoMessage()    {}
func (*StatusKanban) Descriptor() ([]byte, []int) {
	return fileDescriptor_19b14d75b3499268, []int{0}
}

func (m *StatusKanban) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StatusKanban.Unmarshal(m, b)
}
func (m *StatusKanban) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StatusKanban.Marshal(b, m, deterministic)
}
func (m *StatusKanban) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StatusKanban.Merge(m, src)
}
func (m *StatusKanban) XXX_Size() int {
	return xxx_messageInfo_StatusKanban.Size(m)
}
func (m *StatusKanban) XXX_DiscardUnknown() {
	xxx_messageInfo_StatusKanban.DiscardUnknown(m)
}

var xxx_messageInfo_StatusKanban proto.InternalMessageInfo

func (m *StatusKanban) GetStartAt() string {
	if m != nil {
		return m.StartAt
	}
	return ""
}

func (m *StatusKanban) GetFinishAt() string {
	if m != nil {
		return m.FinishAt
	}
	return ""
}

func (m *StatusKanban) GetServices() []*ServiceData {
	if m != nil {
		return m.Services
	}
	return nil
}

func (m *StatusKanban) GetConnectionKey() string {
	if m != nil {
		return m.ConnectionKey
	}
	return ""
}

func (m *StatusKanban) GetProcessNumber() int32 {
	if m != nil {
		return m.ProcessNumber
	}
	return 0
}

func (m *StatusKanban) GetPriorSuccess() bool {
	if m != nil {
		return m.PriorSuccess
	}
	return false
}

func (m *StatusKanban) GetDataPath() string {
	if m != nil {
		return m.DataPath
	}
	return ""
}

func (m *StatusKanban) GetFileList() []string {
	if m != nil {
		return m.FileList
	}
	return nil
}

func (m *StatusKanban) GetMetadata() *_struct.Struct {
	if m != nil {
		return m.Metadata
	}
	return nil
}

type ServiceData struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Device               string   `protobuf:"bytes,2,opt,name=device,proto3" json:"device,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ServiceData) Reset()         { *m = ServiceData{} }
func (m *ServiceData) String() string { return proto.CompactTextString(m) }
func (*ServiceData) ProtoMessage()    {}
func (*ServiceData) Descriptor() ([]byte, []int) {
	return fileDescriptor_19b14d75b3499268, []int{1}
}

func (m *ServiceData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ServiceData.Unmarshal(m, b)
}
func (m *ServiceData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ServiceData.Marshal(b, m, deterministic)
}
func (m *ServiceData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ServiceData.Merge(m, src)
}
func (m *ServiceData) XXX_Size() int {
	return xxx_messageInfo_ServiceData.Size(m)
}
func (m *ServiceData) XXX_DiscardUnknown() {
	xxx_messageInfo_ServiceData.DiscardUnknown(m)
}

var xxx_messageInfo_ServiceData proto.InternalMessageInfo

func (m *ServiceData) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ServiceData) GetDevice() string {
	if m != nil {
		return m.Device
	}
	return ""
}

type SendKanban struct {
	DeviceName           string        `protobuf:"bytes,1,opt,name=deviceName,proto3" json:"deviceName,omitempty"`
	DeviceAddr           string        `protobuf:"bytes,2,opt,name=deviceAddr,proto3" json:"deviceAddr,omitempty"`
	NextService          string        `protobuf:"bytes,3,opt,name=nextService,proto3" json:"nextService,omitempty"`
	NextNumber           int32         `protobuf:"varint,4,opt,name=nextNumber,proto3" json:"nextNumber,omitempty"`
	AfterKanban          *StatusKanban `protobuf:"bytes,5,opt,name=afterKanban,proto3" json:"afterKanban,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *SendKanban) Reset()         { *m = SendKanban{} }
func (m *SendKanban) String() string { return proto.CompactTextString(m) }
func (*SendKanban) ProtoMessage()    {}
func (*SendKanban) Descriptor() ([]byte, []int) {
	return fileDescriptor_19b14d75b3499268, []int{2}
}

func (m *SendKanban) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SendKanban.Unmarshal(m, b)
}
func (m *SendKanban) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SendKanban.Marshal(b, m, deterministic)
}
func (m *SendKanban) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SendKanban.Merge(m, src)
}
func (m *SendKanban) XXX_Size() int {
	return xxx_messageInfo_SendKanban.Size(m)
}
func (m *SendKanban) XXX_DiscardUnknown() {
	xxx_messageInfo_SendKanban.DiscardUnknown(m)
}

var xxx_messageInfo_SendKanban proto.InternalMessageInfo

func (m *SendKanban) GetDeviceName() string {
	if m != nil {
		return m.DeviceName
	}
	return ""
}

func (m *SendKanban) GetDeviceAddr() string {
	if m != nil {
		return m.DeviceAddr
	}
	return ""
}

func (m *SendKanban) GetNextService() string {
	if m != nil {
		return m.NextService
	}
	return ""
}

func (m *SendKanban) GetNextNumber() int32 {
	if m != nil {
		return m.NextNumber
	}
	return 0
}

func (m *SendKanban) GetAfterKanban() *StatusKanban {
	if m != nil {
		return m.AfterKanban
	}
	return nil
}

type Chunk struct {
	Context              []byte   `protobuf:"bytes,1,opt,name=context,proto3" json:"context,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Chunk) Reset()         { *m = Chunk{} }
func (m *Chunk) String() string { return proto.CompactTextString(m) }
func (*Chunk) ProtoMessage()    {}
func (*Chunk) Descriptor() ([]byte, []int) {
	return fileDescriptor_19b14d75b3499268, []int{3}
}

func (m *Chunk) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Chunk.Unmarshal(m, b)
}
func (m *Chunk) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Chunk.Marshal(b, m, deterministic)
}
func (m *Chunk) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Chunk.Merge(m, src)
}
func (m *Chunk) XXX_Size() int {
	return xxx_messageInfo_Chunk.Size(m)
}
func (m *Chunk) XXX_DiscardUnknown() {
	xxx_messageInfo_Chunk.DiscardUnknown(m)
}

var xxx_messageInfo_Chunk proto.InternalMessageInfo

func (m *Chunk) GetContext() []byte {
	if m != nil {
		return m.Context
	}
	return nil
}

func (m *Chunk) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type SendContext struct {
	Code                 UploadRequestCode `protobuf:"varint,1,opt,name=code,proto3,enum=kanbanpb.UploadRequestCode" json:"code,omitempty"`
	Context              *any.Any          `protobuf:"bytes,2,opt,name=context,proto3" json:"context,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *SendContext) Reset()         { *m = SendContext{} }
func (m *SendContext) String() string { return proto.CompactTextString(m) }
func (*SendContext) ProtoMessage()    {}
func (*SendContext) Descriptor() ([]byte, []int) {
	return fileDescriptor_19b14d75b3499268, []int{4}
}

func (m *SendContext) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SendContext.Unmarshal(m, b)
}
func (m *SendContext) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SendContext.Marshal(b, m, deterministic)
}
func (m *SendContext) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SendContext.Merge(m, src)
}
func (m *SendContext) XXX_Size() int {
	return xxx_messageInfo_SendContext.Size(m)
}
func (m *SendContext) XXX_DiscardUnknown() {
	xxx_messageInfo_SendContext.DiscardUnknown(m)
}

var xxx_messageInfo_SendContext proto.InternalMessageInfo

func (m *SendContext) GetCode() UploadRequestCode {
	if m != nil {
		return m.Code
	}
	return UploadRequestCode_SendingKanban
}

func (m *SendContext) GetContext() *any.Any {
	if m != nil {
		return m.Context
	}
	return nil
}

type UploadStatus struct {
	Message              string           `protobuf:"bytes,1,opt,name=Message,proto3" json:"Message,omitempty"`
	StatusCode           UploadStatusCode `protobuf:"varint,2,opt,name=statusCode,proto3,enum=kanbanpb.UploadStatusCode" json:"statusCode,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *UploadStatus) Reset()         { *m = UploadStatus{} }
func (m *UploadStatus) String() string { return proto.CompactTextString(m) }
func (*UploadStatus) ProtoMessage()    {}
func (*UploadStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_19b14d75b3499268, []int{5}
}

func (m *UploadStatus) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UploadStatus.Unmarshal(m, b)
}
func (m *UploadStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UploadStatus.Marshal(b, m, deterministic)
}
func (m *UploadStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UploadStatus.Merge(m, src)
}
func (m *UploadStatus) XXX_Size() int {
	return xxx_messageInfo_UploadStatus.Size(m)
}
func (m *UploadStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_UploadStatus.DiscardUnknown(m)
}

var xxx_messageInfo_UploadStatus proto.InternalMessageInfo

func (m *UploadStatus) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *UploadStatus) GetStatusCode() UploadStatusCode {
	if m != nil {
		return m.StatusCode
	}
	return UploadStatusCode_Unknown
}

// --------------------- Status Kanban Server ---------------------------
// サービス起動時通知
type InitializeService struct {
	MicroserviceName     string   `protobuf:"bytes,1,opt,name=microserviceName,proto3" json:"microserviceName,omitempty"`
	ProcessNumber        int32    `protobuf:"varint,2,opt,name=processNumber,proto3" json:"processNumber,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InitializeService) Reset()         { *m = InitializeService{} }
func (m *InitializeService) String() string { return proto.CompactTextString(m) }
func (*InitializeService) ProtoMessage()    {}
func (*InitializeService) Descriptor() ([]byte, []int) {
	return fileDescriptor_19b14d75b3499268, []int{6}
}

func (m *InitializeService) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InitializeService.Unmarshal(m, b)
}
func (m *InitializeService) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InitializeService.Marshal(b, m, deterministic)
}
func (m *InitializeService) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InitializeService.Merge(m, src)
}
func (m *InitializeService) XXX_Size() int {
	return xxx_messageInfo_InitializeService.Size(m)
}
func (m *InitializeService) XXX_DiscardUnknown() {
	xxx_messageInfo_InitializeService.DiscardUnknown(m)
}

var xxx_messageInfo_InitializeService proto.InternalMessageInfo

func (m *InitializeService) GetMicroserviceName() string {
	if m != nil {
		return m.MicroserviceName
	}
	return ""
}

func (m *InitializeService) GetProcessNumber() int32 {
	if m != nil {
		return m.ProcessNumber
	}
	return 0
}

// サービス起動時通知（マイクロサービからカンバン取得[for debug] )
type InitializeServiceWithKanban struct {
	MicroserviceName     string        `protobuf:"bytes,1,opt,name=microserviceName,proto3" json:"microserviceName,omitempty"`
	CacheKanban          *StatusKanban `protobuf:"bytes,2,opt,name=cacheKanban,proto3" json:"cacheKanban,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *InitializeServiceWithKanban) Reset()         { *m = InitializeServiceWithKanban{} }
func (m *InitializeServiceWithKanban) String() string { return proto.CompactTextString(m) }
func (*InitializeServiceWithKanban) ProtoMessage()    {}
func (*InitializeServiceWithKanban) Descriptor() ([]byte, []int) {
	return fileDescriptor_19b14d75b3499268, []int{7}
}

func (m *InitializeServiceWithKanban) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InitializeServiceWithKanban.Unmarshal(m, b)
}
func (m *InitializeServiceWithKanban) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InitializeServiceWithKanban.Marshal(b, m, deterministic)
}
func (m *InitializeServiceWithKanban) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InitializeServiceWithKanban.Merge(m, src)
}
func (m *InitializeServiceWithKanban) XXX_Size() int {
	return xxx_messageInfo_InitializeServiceWithKanban.Size(m)
}
func (m *InitializeServiceWithKanban) XXX_DiscardUnknown() {
	xxx_messageInfo_InitializeServiceWithKanban.DiscardUnknown(m)
}

var xxx_messageInfo_InitializeServiceWithKanban proto.InternalMessageInfo

func (m *InitializeServiceWithKanban) GetMicroserviceName() string {
	if m != nil {
		return m.MicroserviceName
	}
	return ""
}

func (m *InitializeServiceWithKanban) GetCacheKanban() *StatusKanban {
	if m != nil {
		return m.CacheKanban
	}
	return nil
}

// microserviceの実行結果
type OutputRequest struct {
	PriorSuccess         bool            `protobuf:"varint,1,opt,name=priorSuccess,proto3" json:"priorSuccess,omitempty"`
	DataPath             string          `protobuf:"bytes,2,opt,name=dataPath,proto3" json:"dataPath,omitempty"`
	ConnectionKey        string          `protobuf:"bytes,3,opt,name=connectionKey,proto3" json:"connectionKey,omitempty"`
	ProcessNumber        int32           `protobuf:"varint,4,opt,name=processNumber,proto3" json:"processNumber,omitempty"`
	FileList             []string        `protobuf:"bytes,5,rep,name=fileList,proto3" json:"fileList,omitempty"`
	Metadata             *_struct.Struct `protobuf:"bytes,6,opt,name=metadata,proto3" json:"metadata,omitempty"`
	DeviceName           string          `protobuf:"bytes,7,opt,name=deviceName,proto3" json:"deviceName,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *OutputRequest) Reset()         { *m = OutputRequest{} }
func (m *OutputRequest) String() string { return proto.CompactTextString(m) }
func (*OutputRequest) ProtoMessage()    {}
func (*OutputRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_19b14d75b3499268, []int{8}
}

func (m *OutputRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OutputRequest.Unmarshal(m, b)
}
func (m *OutputRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OutputRequest.Marshal(b, m, deterministic)
}
func (m *OutputRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OutputRequest.Merge(m, src)
}
func (m *OutputRequest) XXX_Size() int {
	return xxx_messageInfo_OutputRequest.Size(m)
}
func (m *OutputRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_OutputRequest.DiscardUnknown(m)
}

var xxx_messageInfo_OutputRequest proto.InternalMessageInfo

func (m *OutputRequest) GetPriorSuccess() bool {
	if m != nil {
		return m.PriorSuccess
	}
	return false
}

func (m *OutputRequest) GetDataPath() string {
	if m != nil {
		return m.DataPath
	}
	return ""
}

func (m *OutputRequest) GetConnectionKey() string {
	if m != nil {
		return m.ConnectionKey
	}
	return ""
}

func (m *OutputRequest) GetProcessNumber() int32 {
	if m != nil {
		return m.ProcessNumber
	}
	return 0
}

func (m *OutputRequest) GetFileList() []string {
	if m != nil {
		return m.FileList
	}
	return nil
}

func (m *OutputRequest) GetMetadata() *_struct.Struct {
	if m != nil {
		return m.Metadata
	}
	return nil
}

func (m *OutputRequest) GetDeviceName() string {
	if m != nil {
		return m.DeviceName
	}
	return ""
}

type Request struct {
	MessageType          RequestType `protobuf:"varint,1,opt,name=messageType,proto3,enum=kanbanpb.RequestType" json:"messageType,omitempty"`
	Message              *any.Any    `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *Request) Reset()         { *m = Request{} }
func (m *Request) String() string { return proto.CompactTextString(m) }
func (*Request) ProtoMessage()    {}
func (*Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_19b14d75b3499268, []int{9}
}

func (m *Request) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Request.Unmarshal(m, b)
}
func (m *Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Request.Marshal(b, m, deterministic)
}
func (m *Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Request.Merge(m, src)
}
func (m *Request) XXX_Size() int {
	return xxx_messageInfo_Request.Size(m)
}
func (m *Request) XXX_DiscardUnknown() {
	xxx_messageInfo_Request.DiscardUnknown(m)
}

var xxx_messageInfo_Request proto.InternalMessageInfo

func (m *Request) GetMessageType() RequestType {
	if m != nil {
		return m.MessageType
	}
	return RequestType_START_SERVICE
}

func (m *Request) GetMessage() *any.Any {
	if m != nil {
		return m.Message
	}
	return nil
}

type Response struct {
	MessageType          ResponseType `protobuf:"varint,1,opt,name=messageType,proto3,enum=kanbanpb.ResponseType" json:"messageType,omitempty"`
	Message              *any.Any     `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Error                string       `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *Response) Reset()         { *m = Response{} }
func (m *Response) String() string { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()    {}
func (*Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_19b14d75b3499268, []int{10}
}

func (m *Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Response.Unmarshal(m, b)
}
func (m *Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Response.Marshal(b, m, deterministic)
}
func (m *Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Response.Merge(m, src)
}
func (m *Response) XXX_Size() int {
	return xxx_messageInfo_Response.Size(m)
}
func (m *Response) XXX_DiscardUnknown() {
	xxx_messageInfo_Response.DiscardUnknown(m)
}

var xxx_messageInfo_Response proto.InternalMessageInfo

func (m *Response) GetMessageType() ResponseType {
	if m != nil {
		return m.MessageType
	}
	return ResponseType_RES_CACHE_KANBAN
}

func (m *Response) GetMessage() *any.Any {
	if m != nil {
		return m.Message
	}
	return nil
}

func (m *Response) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

func init() {
	proto.RegisterEnum("kanbanpb.UploadRequestCode", UploadRequestCode_name, UploadRequestCode_value)
	proto.RegisterEnum("kanbanpb.UploadStatusCode", UploadStatusCode_name, UploadStatusCode_value)
	proto.RegisterEnum("kanbanpb.RequestType", RequestType_name, RequestType_value)
	proto.RegisterEnum("kanbanpb.ResponseType", ResponseType_name, ResponseType_value)
	proto.RegisterType((*StatusKanban)(nil), "kanbanpb.StatusKanban")
	proto.RegisterType((*ServiceData)(nil), "kanbanpb.ServiceData")
	proto.RegisterType((*SendKanban)(nil), "kanbanpb.SendKanban")
	proto.RegisterType((*Chunk)(nil), "kanbanpb.Chunk")
	proto.RegisterType((*SendContext)(nil), "kanbanpb.SendContext")
	proto.RegisterType((*UploadStatus)(nil), "kanbanpb.UploadStatus")
	proto.RegisterType((*InitializeService)(nil), "kanbanpb.InitializeService")
	proto.RegisterType((*InitializeServiceWithKanban)(nil), "kanbanpb.InitializeServiceWithKanban")
	proto.RegisterType((*OutputRequest)(nil), "kanbanpb.OutputRequest")
	proto.RegisterType((*Request)(nil), "kanbanpb.Request")
	proto.RegisterType((*Response)(nil), "kanbanpb.Response")
}

func init() {
	proto.RegisterFile("proto/kanbanpb/status.proto", fileDescriptor_19b14d75b3499268)
}

var fileDescriptor_19b14d75b3499268 = []byte{
	// 949 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x55, 0xd1, 0x8e, 0xda, 0x46,
	0x14, 0x5d, 0x9b, 0x5d, 0x20, 0xd7, 0x6c, 0x6a, 0x26, 0x1b, 0xe2, 0xb2, 0x51, 0x85, 0xac, 0x3e,
	0x20, 0x1e, 0xa0, 0x65, 0x55, 0x35, 0xad, 0xda, 0x07, 0x87, 0x78, 0x9b, 0xd5, 0x26, 0x90, 0xda,
	0xa6, 0x91, 0xda, 0x07, 0x64, 0xec, 0x59, 0xb0, 0x16, 0xc6, 0xd4, 0x1e, 0xda, 0xd0, 0xd7, 0xbe,
	0x55, 0xfd, 0x82, 0x7e, 0x51, 0x3f, 0xa0, 0x1f, 0x54, 0x8d, 0x67, 0x0c, 0x03, 0x5e, 0x6d, 0x53,
	0xe5, 0xcd, 0xf7, 0xcc, 0xd1, 0xbd, 0x77, 0xce, 0xbd, 0x67, 0x0c, 0xe7, 0xab, 0x24, 0xa6, 0x71,
	0xef, 0xd6, 0x27, 0x53, 0x9f, 0xac, 0xa6, 0xbd, 0x94, 0xfa, 0x74, 0x9d, 0x76, 0x33, 0x14, 0x55,
	0x73, 0xb8, 0xf9, 0x74, 0x16, 0xc7, 0xb3, 0x05, 0xee, 0x65, 0xf8, 0x74, 0x7d, 0xd3, 0x4b, 0x69,
	0xb2, 0x0e, 0x28, 0xe7, 0x35, 0x3f, 0x3e, 0x3c, 0xf5, 0xc9, 0x86, 0x1f, 0x99, 0xff, 0xa8, 0x50,
	0x73, 0xb3, 0x9c, 0xd7, 0x59, 0x2e, 0x64, 0x40, 0x25, 0xa5, 0x7e, 0x42, 0x2d, 0x6a, 0x28, 0x2d,
	0xa5, 0xfd, 0xc0, 0xc9, 0x43, 0xd4, 0x84, 0xea, 0x4d, 0x44, 0xa2, 0x74, 0x6e, 0x51, 0x43, 0xcd,
	0x8e, 0xb6, 0x31, 0xfa, 0x1c, 0xaa, 0x29, 0x4e, 0x7e, 0x89, 0x02, 0x9c, 0x1a, 0xa5, 0x56, 0xa9,
	0xad, 0xf5, 0x1f, 0x77, 0xf3, 0xe6, 0xba, 0x2e, 0x3f, 0x79, 0xe1, 0x53, 0xdf, 0xd9, 0xd2, 0xd0,
	0xa7, 0x70, 0x1a, 0xc4, 0x84, 0xe0, 0x80, 0x46, 0x31, 0xb9, 0xc6, 0x1b, 0xe3, 0x38, 0xcb, 0xb9,
	0x0f, 0x32, 0xd6, 0x2a, 0x89, 0x03, 0x9c, 0xa6, 0xc3, 0xf5, 0x72, 0x8a, 0x13, 0xe3, 0xa4, 0xa5,
	0xb4, 0x4f, 0x9c, 0x7d, 0x10, 0x99, 0x50, 0x5b, 0x25, 0x51, 0x9c, 0xb8, 0xeb, 0x80, 0xa1, 0x46,
	0xb9, 0xa5, 0xb4, 0xab, 0xce, 0x1e, 0xc6, 0xda, 0x0f, 0x7d, 0xea, 0xbf, 0xf1, 0xe9, 0xdc, 0xa8,
	0xf0, 0xf6, 0xf3, 0x98, 0x5f, 0x6d, 0x81, 0x5f, 0x45, 0x29, 0x35, 0xaa, 0xad, 0x12, 0xbf, 0x1a,
	0x8f, 0xd1, 0x05, 0x54, 0x97, 0x98, 0xfa, 0x8c, 0x6b, 0x3c, 0x68, 0x29, 0x6d, 0xad, 0xff, 0xa4,
	0xcb, 0xf5, 0xec, 0xe6, 0x7a, 0x76, 0xdd, 0x4c, 0x6d, 0x67, 0x4b, 0x34, 0xbf, 0x02, 0x4d, 0xba,
	0x35, 0x42, 0x70, 0x4c, 0xfc, 0x25, 0x16, 0x8a, 0x66, 0xdf, 0xa8, 0x01, 0xe5, 0x10, 0x33, 0x86,
	0x10, 0x53, 0x44, 0xe6, 0xdf, 0x0a, 0x80, 0x8b, 0x49, 0x28, 0xe6, 0xf1, 0x09, 0x00, 0x3f, 0x18,
	0xee, 0x12, 0x48, 0xc8, 0xee, 0xdc, 0x0a, 0xc3, 0x44, 0xa4, 0x92, 0x10, 0xd4, 0x02, 0x8d, 0xe0,
	0x77, 0x54, 0x74, 0x63, 0x94, 0x32, 0x82, 0x0c, 0xb1, 0x0c, 0x2c, 0x14, 0xfa, 0x1e, 0x67, 0xfa,
	0x4a, 0x08, 0x7a, 0x06, 0x9a, 0x7f, 0x43, 0x71, 0xc2, 0x1b, 0xca, 0x06, 0xa0, 0xf5, 0x1b, 0xd2,
	0x78, 0xa5, 0xf5, 0x71, 0x64, 0xaa, 0xf9, 0x05, 0x9c, 0x0c, 0xe6, 0x6b, 0x72, 0xcb, 0x96, 0x2a,
	0x88, 0x09, 0xc5, 0xef, 0xf8, 0x52, 0xd5, 0x9c, 0x3c, 0xdc, 0x2a, 0xa3, 0xee, 0x94, 0x31, 0x09,
	0x13, 0x8f, 0x84, 0x03, 0x41, 0xe9, 0xc1, 0x71, 0x10, 0x87, 0xfc, 0xee, 0x0f, 0xfb, 0xe7, 0xbb,
	0xc2, 0xe3, 0xd5, 0x22, 0xf6, 0x43, 0x07, 0xff, 0xbc, 0xc6, 0x29, 0x1d, 0xc4, 0x21, 0x76, 0x32,
	0x22, 0xea, 0xee, 0xaa, 0xa9, 0x59, 0xb3, 0x67, 0x85, 0x81, 0x59, 0x64, 0xb3, 0xed, 0xc1, 0x0c,
	0xa1, 0xc6, 0x53, 0xf1, 0x9b, 0xb0, 0x6e, 0x5f, 0xe3, 0x34, 0xf5, 0x67, 0xb9, 0xde, 0x79, 0x88,
	0xbe, 0x06, 0xe0, 0x06, 0x64, 0xd5, 0xb2, 0xe4, 0x0f, 0xfb, 0xcd, 0xc3, 0x86, 0xdc, 0x2d, 0xc3,
	0x91, 0xd8, 0x26, 0x86, 0xfa, 0x15, 0x89, 0x68, 0xe4, 0x2f, 0xa2, 0xdf, 0x70, 0xae, 0x7d, 0x07,
	0xf4, 0x65, 0x14, 0x24, 0xb1, 0x70, 0x85, 0x34, 0xe3, 0x02, 0x5e, 0xb4, 0x82, 0x7a, 0x87, 0x15,
	0xcc, 0xdf, 0x15, 0x38, 0x2f, 0xd4, 0x79, 0x1b, 0xd1, 0xb9, 0xd8, 0xa7, 0xff, 0x53, 0xf1, 0x19,
	0x68, 0x81, 0x1f, 0xcc, 0xb1, 0x98, 0xbc, 0x7a, 0xff, 0xe4, 0x25, 0xaa, 0xf9, 0xa7, 0x0a, 0xa7,
	0xa3, 0x35, 0x5d, 0xad, 0xa9, 0x18, 0x4f, 0xc1, 0xa2, 0xca, 0x7f, 0x58, 0x54, 0x3d, 0xb0, 0x68,
	0xe1, 0xb9, 0x28, 0xbd, 0xd7, 0x73, 0x71, 0x7c, 0xd7, 0x73, 0x21, 0xdb, 0xfd, 0xe4, 0x1e, 0xbb,
	0x97, 0xdf, 0xd3, 0xee, 0x07, 0x26, 0xad, 0x1c, 0x9a, 0xd4, 0x4c, 0xa0, 0x92, 0xeb, 0xf0, 0x25,
	0x68, 0x4b, 0xbe, 0x4d, 0xde, 0x66, 0x95, 0x2f, 0xb5, 0xf4, 0x58, 0x0a, 0x1e, 0x3b, 0x74, 0x64,
	0x26, 0xdb, 0x6a, 0x11, 0xde, 0xbf, 0xd5, 0x82, 0x64, 0xfe, 0xa1, 0x40, 0xd5, 0xc1, 0xe9, 0x2a,
	0x26, 0x69, 0x36, 0xc9, 0x62, 0xd5, 0x86, 0x5c, 0x95, 0x13, 0x3f, 0xb8, 0x2c, 0x3a, 0x83, 0x13,
	0x9c, 0x24, 0x71, 0x22, 0xe6, 0xc3, 0x83, 0xce, 0x8f, 0x50, 0x2f, 0xb8, 0x15, 0xd5, 0xe1, 0x94,
	0xf9, 0x3c, 0x22, 0x33, 0xbe, 0x35, 0xfa, 0x11, 0x3a, 0x03, 0x5d, 0x40, 0x97, 0xd1, 0x02, 0x4f,
	0x06, 0xa3, 0xa1, 0xa7, 0x2b, 0xe8, 0x11, 0x7c, 0x24, 0xa3, 0xf6, 0xe8, 0x52, 0x57, 0x51, 0x05,
	0x4a, 0xf6, 0xc8, 0xd5, 0x4b, 0x9d, 0x0b, 0xd0, 0x0f, 0x8d, 0x87, 0x34, 0xa8, 0x8c, 0xc9, 0x2d,
	0x89, 0x7f, 0x65, 0x49, 0x01, 0xca, 0x97, 0x7e, 0xb4, 0xc0, 0xa1, 0xae, 0xa0, 0x32, 0xa8, 0xa3,
	0x6b, 0x5d, 0xed, 0xfc, 0x04, 0x9a, 0xa4, 0x74, 0xd6, 0x8a, 0x67, 0x39, 0xde, 0xc4, 0xb5, 0x9d,
	0x1f, 0xae, 0x06, 0xb6, 0x7e, 0x84, 0x5a, 0xf0, 0x74, 0x0f, 0x9a, 0xbc, 0xbd, 0xf2, 0x5e, 0x8e,
	0xc6, 0xde, 0xe4, 0xda, 0x1a, 0x3e, 0xb7, 0x86, 0xba, 0x82, 0x9e, 0xc0, 0xa3, 0xd1, 0xd8, 0x7b,
	0x33, 0xf6, 0x26, 0xd6, 0xa5, 0x67, 0x3b, 0xf9, 0x81, 0xda, 0xf9, 0x06, 0x6a, 0xb2, 0xa0, 0xec,
	0x56, 0x8e, 0xed, 0x4e, 0x06, 0xd6, 0xe0, 0xa5, 0x9d, 0xb3, 0x8e, 0x50, 0x03, 0x10, 0x43, 0x1d,
	0xfb, 0xfb, 0xb1, 0xed, 0x7a, 0x13, 0xc7, 0x76, 0xc7, 0xaf, 0x3c, 0x5d, 0xe9, 0x7f, 0x07, 0x65,
	0xe1, 0xd5, 0x6f, 0x41, 0x7f, 0x2d, 0x79, 0x72, 0x10, 0x13, 0x82, 0xea, 0x85, 0x55, 0x69, 0xa2,
	0xe2, 0x1c, 0xdb, 0xca, 0x67, 0x4a, 0xff, 0x2f, 0x05, 0x6a, 0x4c, 0x37, 0x8b, 0x6c, 0xe8, 0x3c,
	0x22, 0x33, 0x34, 0x80, 0xba, 0x78, 0x10, 0x9e, 0x27, 0xf1, 0x2d, 0x4e, 0xb2, 0x84, 0x67, 0xf2,
	0x8f, 0x3a, 0xff, 0xed, 0x34, 0xef, 0x44, 0x59, 0x56, 0x64, 0x03, 0x62, 0x88, 0x17, 0x8f, 0xe8,
	0x1c, 0x27, 0x2f, 0x30, 0xff, 0x9b, 0x3f, 0xde, 0xe7, 0x8b, 0xb7, 0xbb, 0xd9, 0xb8, 0xfb, 0x71,
	0x6c, 0x2b, 0xd3, 0x72, 0xb6, 0x3e, 0x17, 0xff, 0x06, 0x00, 0x00, 0xff, 0xff, 0xcf, 0x81, 0xe7,
	0xa1, 0xe1, 0x08, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// KanbanClient is the client API for Kanban service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type KanbanClient interface {
	// 最新のCカンバンを取得する
	MicroserviceConn(ctx context.Context, opts ...grpc.CallOption) (Kanban_MicroserviceConnClient, error)
}

type kanbanClient struct {
	cc grpc.ClientConnInterface
}

func NewKanbanClient(cc grpc.ClientConnInterface) KanbanClient {
	return &kanbanClient{cc}
}

func (c *kanbanClient) MicroserviceConn(ctx context.Context, opts ...grpc.CallOption) (Kanban_MicroserviceConnClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Kanban_serviceDesc.Streams[0], "/kanbanpb.Kanban/MicroserviceConn", opts...)
	if err != nil {
		return nil, err
	}
	x := &kanbanMicroserviceConnClient{stream}
	return x, nil
}

type Kanban_MicroserviceConnClient interface {
	Send(*Request) error
	Recv() (*Response, error)
	grpc.ClientStream
}

type kanbanMicroserviceConnClient struct {
	grpc.ClientStream
}

func (x *kanbanMicroserviceConnClient) Send(m *Request) error {
	return x.ClientStream.SendMsg(m)
}

func (x *kanbanMicroserviceConnClient) Recv() (*Response, error) {
	m := new(Response)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// KanbanServer is the server API for Kanban service.
type KanbanServer interface {
	// 最新のCカンバンを取得する
	MicroserviceConn(Kanban_MicroserviceConnServer) error
}

// UnimplementedKanbanServer can be embedded to have forward compatible implementations.
type UnimplementedKanbanServer struct {
}

func (*UnimplementedKanbanServer) MicroserviceConn(srv Kanban_MicroserviceConnServer) error {
	return status.Errorf(codes.Unimplemented, "method MicroserviceConn not implemented")
}

func RegisterKanbanServer(s *grpc.Server, srv KanbanServer) {
	s.RegisterService(&_Kanban_serviceDesc, srv)
}

func _Kanban_MicroserviceConn_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(KanbanServer).MicroserviceConn(&kanbanMicroserviceConnServer{stream})
}

type Kanban_MicroserviceConnServer interface {
	Send(*Response) error
	Recv() (*Request, error)
	grpc.ServerStream
}

type kanbanMicroserviceConnServer struct {
	grpc.ServerStream
}

func (x *kanbanMicroserviceConnServer) Send(m *Response) error {
	return x.ServerStream.SendMsg(m)
}

func (x *kanbanMicroserviceConnServer) Recv() (*Request, error) {
	m := new(Request)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _Kanban_serviceDesc = grpc.ServiceDesc{
	ServiceName: "kanbanpb.Kanban",
	HandlerType: (*KanbanServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "MicroserviceConn",
			Handler:       _Kanban_MicroserviceConn_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "proto/kanbanpb/status.proto",
}

// SendAnythingClient is the client API for SendAnything service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SendAnythingClient interface {
	ServiceBrokerConn(ctx context.Context, opts ...grpc.CallOption) (SendAnything_ServiceBrokerConnClient, error)
	SendToOtherDevices(ctx context.Context, opts ...grpc.CallOption) (SendAnything_SendToOtherDevicesClient, error)
}

type sendAnythingClient struct {
	cc grpc.ClientConnInterface
}

func NewSendAnythingClient(cc grpc.ClientConnInterface) SendAnythingClient {
	return &sendAnythingClient{cc}
}

func (c *sendAnythingClient) ServiceBrokerConn(ctx context.Context, opts ...grpc.CallOption) (SendAnything_ServiceBrokerConnClient, error) {
	stream, err := c.cc.NewStream(ctx, &_SendAnything_serviceDesc.Streams[0], "/kanbanpb.SendAnything/ServiceBrokerConn", opts...)
	if err != nil {
		return nil, err
	}
	x := &sendAnythingServiceBrokerConnClient{stream}
	return x, nil
}

type SendAnything_ServiceBrokerConnClient interface {
	Send(*SendKanban) error
	Recv() (*SendKanban, error)
	grpc.ClientStream
}

type sendAnythingServiceBrokerConnClient struct {
	grpc.ClientStream
}

func (x *sendAnythingServiceBrokerConnClient) Send(m *SendKanban) error {
	return x.ClientStream.SendMsg(m)
}

func (x *sendAnythingServiceBrokerConnClient) Recv() (*SendKanban, error) {
	m := new(SendKanban)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *sendAnythingClient) SendToOtherDevices(ctx context.Context, opts ...grpc.CallOption) (SendAnything_SendToOtherDevicesClient, error) {
	stream, err := c.cc.NewStream(ctx, &_SendAnything_serviceDesc.Streams[1], "/kanbanpb.SendAnything/SendToOtherDevices", opts...)
	if err != nil {
		return nil, err
	}
	x := &sendAnythingSendToOtherDevicesClient{stream}
	return x, nil
}

type SendAnything_SendToOtherDevicesClient interface {
	Send(*SendContext) error
	CloseAndRecv() (*UploadStatus, error)
	grpc.ClientStream
}

type sendAnythingSendToOtherDevicesClient struct {
	grpc.ClientStream
}

func (x *sendAnythingSendToOtherDevicesClient) Send(m *SendContext) error {
	return x.ClientStream.SendMsg(m)
}

func (x *sendAnythingSendToOtherDevicesClient) CloseAndRecv() (*UploadStatus, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(UploadStatus)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// SendAnythingServer is the server API for SendAnything service.
type SendAnythingServer interface {
	ServiceBrokerConn(SendAnything_ServiceBrokerConnServer) error
	SendToOtherDevices(SendAnything_SendToOtherDevicesServer) error
}

// UnimplementedSendAnythingServer can be embedded to have forward compatible implementations.
type UnimplementedSendAnythingServer struct {
}

func (*UnimplementedSendAnythingServer) ServiceBrokerConn(srv SendAnything_ServiceBrokerConnServer) error {
	return status.Errorf(codes.Unimplemented, "method ServiceBrokerConn not implemented")
}
func (*UnimplementedSendAnythingServer) SendToOtherDevices(srv SendAnything_SendToOtherDevicesServer) error {
	return status.Errorf(codes.Unimplemented, "method SendToOtherDevices not implemented")
}

func RegisterSendAnythingServer(s *grpc.Server, srv SendAnythingServer) {
	s.RegisterService(&_SendAnything_serviceDesc, srv)
}

func _SendAnything_ServiceBrokerConn_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(SendAnythingServer).ServiceBrokerConn(&sendAnythingServiceBrokerConnServer{stream})
}

type SendAnything_ServiceBrokerConnServer interface {
	Send(*SendKanban) error
	Recv() (*SendKanban, error)
	grpc.ServerStream
}

type sendAnythingServiceBrokerConnServer struct {
	grpc.ServerStream
}

func (x *sendAnythingServiceBrokerConnServer) Send(m *SendKanban) error {
	return x.ServerStream.SendMsg(m)
}

func (x *sendAnythingServiceBrokerConnServer) Recv() (*SendKanban, error) {
	m := new(SendKanban)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _SendAnything_SendToOtherDevices_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(SendAnythingServer).SendToOtherDevices(&sendAnythingSendToOtherDevicesServer{stream})
}

type SendAnything_SendToOtherDevicesServer interface {
	SendAndClose(*UploadStatus) error
	Recv() (*SendContext, error)
	grpc.ServerStream
}

type sendAnythingSendToOtherDevicesServer struct {
	grpc.ServerStream
}

func (x *sendAnythingSendToOtherDevicesServer) SendAndClose(m *UploadStatus) error {
	return x.ServerStream.SendMsg(m)
}

func (x *sendAnythingSendToOtherDevicesServer) Recv() (*SendContext, error) {
	m := new(SendContext)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _SendAnything_serviceDesc = grpc.ServiceDesc{
	ServiceName: "kanbanpb.SendAnything",
	HandlerType: (*SendAnythingServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "ServiceBrokerConn",
			Handler:       _SendAnything_ServiceBrokerConn_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
		{
			StreamName:    "SendToOtherDevices",
			Handler:       _SendAnything_SendToOtherDevices_Handler,
			ClientStreams: true,
		},
	},
	Metadata: "proto/kanbanpb/status.proto",
}
